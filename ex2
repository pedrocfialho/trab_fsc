main
    
    add v1, zr          ; inicializa v1 com zero (primeiro valor)
    add v2, zr, 1       ; inicializa v2 com um (segundo valor)
    add v4, zr          ; zera o contador
    ldw v5, zr, n       ; lê o N da memória

    add v8, zr, 0x80    ; posição inicial para armazenar na memória

    stw v1, v8          ; grava o primeiro valor na memória
    stw v1, zr, 0xf000  ; envia o primeiro valor para saída
    add v4, v4, 1       ; incrementa contador

    add v8, v8, 2       ; vai para o próximo endereço
    stw v2, v8          ; grava o segundo valor na memória
    stw v2, zr, 0xf000  ; envia o segundo valor para saída
    add v4, v4, 1       ; incrementa contador

loop1  

    add v1, v2          ; calcula próximo número (Fibonacci)
    add v2, v1          ; calcula o seguinte número
 
    stw v1, zr, 0xf000  ; mostra v1
    add v8, v8, 2       ; avança na memória
    stw v1, v8          ; grava v1 na memória
    add v4, v4, 1       ; incrementa contador
    beq v4, v5, endloop1

    stw v2, zr, 0xf000  ; mostra v2
    add v8, v8, 2       ; avança na memória
    stw v2, v8          ; grava v2 na memória
    add v4, v4, 1       ; incrementa contador
    beq v4, v5, endloop1
  
    beq zr, zr, loop1   ; volta para o loop

endloop1

    hlt                 ; fim do programa

n
    10
